<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="postMapper">
	<select id="listCount" resultType="_int"
		parameterType="ListInfo">		
		select count(post_no)
		from plist p
    		left join ulist using (user_no)
			left join (select like_no, post_no from bmp_like where user_no=#{accessorNo}) using (post_no)
    		left join (select user_no, 'block' blocked from(
    						select ulist.*, to_user, fu from ulist
       							left join (select to_user, from_user from bmp_block where from_user=#{accessorNo}) on (user_no=to_user)
        						left join (select from_user fu, to_user tu from bmp_block where to_user=#{accessorNo}) on (user_no=fu)
           					order by from_user) 
						where to_user is not null or fu is not null) using (user_no)
		<where>
			post_del_date is null
		<if test="blogNo ==  0">
   			and user_private='N'
   		</if>
		<if test="blogNo > 0 and tab != 'like'">
			and user_no = #{blogNo}
		</if>
		<if test="keyword != ''">
	 		and ((tag_name like '#'||#{keyword}||'%') or (post_title like '%'||#{keyword}||'%') or 
	 			(post_content like '%'||#{keyword}||'%') or (user_nickname like #{keyword}||'%'))
	 	</if>
		<choose>
			<when test="tab=='hide'">
				and post_hide_date is not null
			</when>
			<otherwise>
				and post_hide_date is null
			</otherwise>
		</choose>
		<if test="tab == 'like'">
			and like_no is not null
		</if>
		<if test="accessorNo > 0">
			and blocked is null
		</if>
		</where>
	</select>
	<update id="addCount">
		update bmp_post set post_count=post_count+1 where post_no=#{no}
	</update>
	<select id="getPostList" resultMap="postResultMap" resultType="Post" parameterType="ListInfo">
		select post_no, post_title, post_content, post_reg_date, post_del_date, post_hide_date, user_no, 
			p.file_name, countcomment, tag_no, tag_name, countlike, user_nickname, like_no, blocked
		from plist p
    		left join ulist using (user_no)
			left join (select like_no, post_no from bmp_like where user_no=#{accessorNo}) using (post_no)
    		left join (select user_no, 'block' blocked from(
    						select ulist.*, to_user, fu from ulist
       							left join (select to_user, from_user from bmp_block where from_user=#{accessorNo}) on (user_no=to_user)
        						left join (select from_user fu, to_user tu from bmp_block where to_user=#{accessorNo}) on (user_no=fu)
           					order by from_user) 
						where to_user is not null or fu is not null) using (user_no)
		<where>
			post_del_date is null and
			file_class='thumbnail'
		<if test="blogNo ==  0">
   			and user_private='N'
   		</if>
		<if test="blogNo > 0 and tab != 'like'">
			and user_no = #{blogNo}
		</if>
		<if test="keyword != ''">
	 		and ((tag_name like '#'||#{keyword}||'%') or (post_title like '%'||#{keyword}||'%') or 
	 			(post_content like '%'||#{keyword}||'%') or (user_nickname like #{keyword}||'%'))
	 	</if>
		<choose>
			<when test="tab=='hide'">
				and post_hide_date is not null
			</when>
			<otherwise>
				and post_hide_date is null
			</otherwise>
		</choose>
		<if test="tab == 'like'">
			and like_no is not null
		</if>
		<if test="accessorNo > 0">
			and blocked is null
		</if>
		</where>
		<choose>
			<when test="sort == '인기순'">
				order by countlike
			</when>
			<when test="sort == '조회순'">
				order by post_count
			</when>
			<otherwise>
				order by post_reg_date
			</otherwise>
		</choose>
		desc, post_no desc
	</select>
		
	<select id="getPost" resultMap="postResultMap">
		select post_no, post_title, post_content, post_reg_date, post_del_date, post_hide_date, user_no, 
			p.file_name, file_class, countcomment, tag_no, tag_name, countlike, like_no, blocked
		from plist p
    		left join ulist using (user_no)
			left join (select like_no, post_no from bmp_like where user_no=#{userNo}) using (post_no)
    		left join (select user_no, 'block' blocked from(
    						select ulist.*, to_user, fu from ulist
       							left join (select to_user, from_user from bmp_block where from_user=#{userNo}) on (user_no=to_user)
        						left join (select from_user fu, to_user tu from bmp_block where to_user=#{userNo}) on (user_no=fu)
           					order by from_user) 
						where to_user is not null or fu is not null) using (user_no)
		where post_no=#{no} and post_del_date is null
	</select>	
	
	<insert id="addPost" useGeneratedKeys="false">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select post_seq.nextval from dual
		</selectKey>
		insert into bmp_post
		values (#{no},#{title},#{content},0,sysdate,null,null,null,#{userNo})
	</insert>
	
	<insert id="addFile" parameterType="AttachedFile">
		insert all
		<foreach collection="fileNames" item="fname" index="index">
		into bmp_file values (get_file_seq,#{fname},
		<choose>
			<when test="index == 0">
				'thumbnail',
			</when>
			<otherwise>
				null,null,
			</otherwise>
		</choose>
		<choose>
			<when test="postNo > 0">
				#{postNo},null)
			</when>
			<otherwise>
				null,#{reportNo})
			</otherwise>
		</choose>
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="addLike" parameterType="Like" useGeneratedKeys="false">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select like_seq.nextval from dual
		</selectKey>
			insert into bmp_like
			values (#{no},sysdate,#{userNo},
		<choose>
			<when test="commentNo==0">
				null,#{postNo})
			</when>
			<otherwise>
				#{commentNo},null)
			</otherwise>
		</choose>
	</insert>
	<delete id="delLike" parameterType="Like">
		delete from bmp_like
		where user_no=#{userNo} and
		<choose>
			<when test="postNo > 0">
				post_no=#{postNo}
			</when>
			<otherwise>
				comment_no=#{commentNo}
			</otherwise>
		</choose>
	</delete>
	
	<update id="delPost">
		update bmp_post set post_del_date=sysdate where post_no=#{no}
	</update>
	
	<select id="getComment" resultMap="commentResultMap">
		select * from clist where post_no=#{no}
	</select>
	
	<select id="getFile" resultType="string">
		select file_name from bmp_file where post_no=#{no}
	</select>
	
	<resultMap type="Post" id="postResultMap">
		<id property="no" column="post_no" />
		<result property="title" column="post_title" />
		<result property="content" column="post_content" />
		<result property="count" column="post_count" />
		<result property="regDate" column="post_reg_date" />
		<result property="editDate" column="post_edit_date" />
		<result property="delDate" column="post_del_date" />
		<result property="hideDate" column="post_hide_date" />
		<result property="userNo" column="user_no" />
		<result property="fileName" column="file_name" />
		<result property="countComment" column="countcomment" />
		<result property="countLike" column="countlike" />
		<result property="nickname" column="user_nickname" />
		<result property="like" column="like_no" />
		<collection property="tagList" javaType="arraylist" resultMap="tagResultMap"></collection>
	</resultMap>
	
	<resultMap type="Tag" id="tagResultMap">
		<id property="no" column="tag_no"/>
		<result property="name" column="tag_name"/>
		<result property="postNo" column="tag_post_no"/>
	</resultMap>
	
	<resultMap type="Comment" id="commentResultMap">
		<id property="no" column="comment_no"/>
		<result property="content" column="comment_content"/>
		<result property="postNo" column="post_no"/>
		<result property="userNo" column="user_no"/>
		<result property="nickname" column="user_nickname"/>
		<result property="fileName" column="file_name"/>
		<result property="countLike" column="countlike"/>	
	</resultMap>
	
</mapper>
